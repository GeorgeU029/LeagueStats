{"ast":null,"code":"var _jsxFileName = \"/Users/georgeulloa/Desktop/riot-app/my-react-app/src/components/SpellImages.js\";\nimport React from 'react';\nimport { Avatar, Box } from '@mui/material';\n\n// Import each spell image\nimport Barrier from '../summonerSpellsImages/Barrier.webp';\nimport Cleanse from '../summonerSpellsImages/Cleanse.webp';\nimport Flash from '../summonerSpellsImages/Flash.webp';\nimport Ignite from '../summonerSpellsImages/Ignite.webp';\nimport Exhaust from '../summonerSpellsImages/Exhaust.webp';\nimport Ghost from '../summonerSpellsImages/Ghost.webp';\nimport Heal from '../summonerSpellsImages/Heal.webp';\nimport Clarity from '../summonerSpellsImages/Clarity.webp';\nimport Smite from '../summonerSpellsImages/Smite.webp';\nimport Teleport from '../summonerSpellsImages/Teleport.webp';\nimport Mark from '../summonerSpellsImages/Mark.webp';\n// Add more imports as needed\n\n// Map spell IDs to imported images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spellImages = {\n  21: Barrier,\n  1: Cleanse,\n  4: Flash,\n  14: Ignite,\n  3: Exhaust,\n  6: Ghost,\n  7: Heal,\n  13: Clarity,\n  11: Smite,\n  12: Teleport,\n  39: Mark\n  // Add mappings for any additional spells\n};\nfunction SpellImages({\n  spells\n}) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    gap: 0.5,\n    children: spells.map((spellId, index) => /*#__PURE__*/_jsxDEV(Avatar, {\n      src: spellImages[spellId] || '' // Use mapped image or fallback\n      ,\n      alt: `Spell ${spellId}`,\n      sx: {\n        width: 32,\n        height: 32\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = SpellImages;\nexport default SpellImages;\nvar _c;\n$RefreshReg$(_c, \"SpellImages\");","map":{"version":3,"names":["React","Avatar","Box","Barrier","Cleanse","Flash","Ignite","Exhaust","Ghost","Heal","Clarity","Smite","Teleport","Mark","jsxDEV","_jsxDEV","spellImages","SpellImages","spells","display","gap","children","map","spellId","index","src","alt","sx","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/georgeulloa/Desktop/riot-app/my-react-app/src/components/SpellImages.js"],"sourcesContent":["import React from 'react';\nimport { Avatar, Box } from '@mui/material';\n\n// Import each spell image\nimport Barrier from '../summonerSpellsImages/Barrier.webp';\nimport Cleanse from '../summonerSpellsImages/Cleanse.webp';\nimport Flash from '../summonerSpellsImages/Flash.webp';\nimport Ignite from '../summonerSpellsImages/Ignite.webp';\nimport Exhaust from '../summonerSpellsImages/Exhaust.webp';\nimport Ghost from '../summonerSpellsImages/Ghost.webp';\nimport Heal from '../summonerSpellsImages/Heal.webp';\nimport Clarity from '../summonerSpellsImages/Clarity.webp';\nimport Smite from '../summonerSpellsImages/Smite.webp';\nimport Teleport from '../summonerSpellsImages/Teleport.webp';\nimport Mark from '../summonerSpellsImages/Mark.webp';\n// Add more imports as needed\n\n// Map spell IDs to imported images\nconst spellImages = {\n  21: Barrier,\n  1: Cleanse,\n  4: Flash,\n  14: Ignite,\n  3: Exhaust,\n  6: Ghost,\n  7: Heal,\n  13: Clarity,\n  11: Smite,\n  12: Teleport,\n  39: Mark,\n  // Add mappings for any additional spells\n};\n\nfunction SpellImages({ spells }) {\n  return (\n    <Box display=\"flex\" gap={0.5}>\n      {spells.map((spellId, index) => (\n        <Avatar\n          key={index}\n          src={spellImages[spellId] || ''} // Use mapped image or fallback\n          alt={`Spell ${spellId}`}\n          sx={{ width: 32, height: 32 }}\n        />\n      ))}\n    </Box>\n  );\n}\n\nexport default SpellImages;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,GAAG,QAAQ,eAAe;;AAE3C;AACA,OAAOC,OAAO,MAAM,sCAAsC;AAC1D,OAAOC,OAAO,MAAM,sCAAsC;AAC1D,OAAOC,KAAK,MAAM,oCAAoC;AACtD,OAAOC,MAAM,MAAM,qCAAqC;AACxD,OAAOC,OAAO,MAAM,sCAAsC;AAC1D,OAAOC,KAAK,MAAM,oCAAoC;AACtD,OAAOC,IAAI,MAAM,mCAAmC;AACpD,OAAOC,OAAO,MAAM,sCAAsC;AAC1D,OAAOC,KAAK,MAAM,oCAAoC;AACtD,OAAOC,QAAQ,MAAM,uCAAuC;AAC5D,OAAOC,IAAI,MAAM,mCAAmC;AACpD;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG;EAClB,EAAE,EAAEb,OAAO;EACX,CAAC,EAAEC,OAAO;EACV,CAAC,EAAEC,KAAK;EACR,EAAE,EAAEC,MAAM;EACV,CAAC,EAAEC,OAAO;EACV,CAAC,EAAEC,KAAK;EACR,CAAC,EAAEC,IAAI;EACP,EAAE,EAAEC,OAAO;EACX,EAAE,EAAEC,KAAK;EACT,EAAE,EAAEC,QAAQ;EACZ,EAAE,EAAEC;EACJ;AACF,CAAC;AAED,SAASI,WAAWA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAC/B,oBACEH,OAAA,CAACb,GAAG;IAACiB,OAAO,EAAC,MAAM;IAACC,GAAG,EAAE,GAAI;IAAAC,QAAA,EAC1BH,MAAM,CAACI,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBT,OAAA,CAACd,MAAM;MAELwB,GAAG,EAAET,WAAW,CAACO,OAAO,CAAC,IAAI,EAAG,CAAC;MAAA;MACjCG,GAAG,EAAE,SAASH,OAAO,EAAG;MACxBI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG;IAAE,GAHzBL,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAbQjB,WAAW;AAepB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}