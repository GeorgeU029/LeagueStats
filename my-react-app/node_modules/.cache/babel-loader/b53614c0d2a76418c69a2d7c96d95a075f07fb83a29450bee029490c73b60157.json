{"ast":null,"code":"var _jsxFileName = \"/Users/georgeulloa/Desktop/riot-app/my-react-app/src/components/WinRateChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement, Tooltip, Legend);\nfunction WinRateChart({\n  wins,\n  losses\n}) {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n\n    // Destroy any existing chart instance to prevent errors\n    if (chartRef.current.chartInstance) {\n      chartRef.current.chartInstance.destroy();\n    }\n\n    // Create a new Chart instance\n    chartRef.current.chartInstance = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Wins', 'Losses'],\n        datasets: [{\n          data: [wins, losses],\n          backgroundColor: ['#4CAF50', '#F44336'],\n          // Adjust colors as needed\n          hoverOffset: 4\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: tooltipItem => {\n                return `${tooltipItem.label}: ${tooltipItem.raw}`;\n              }\n            }\n          }\n        }\n      }\n    });\n\n    // Cleanup function to destroy the chart on unmount\n    return () => {\n      if (chartRef.current.chartInstance) {\n        chartRef.current.chartInstance.destroy();\n      }\n    };\n  }, [wins, losses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '200px',\n      height: '200px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(WinRateChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = WinRateChart;\nexport default WinRateChart;\nvar _c;\n$RefreshReg$(_c, \"WinRateChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","WinRateChart","wins","losses","_s","chartRef","ctx","current","getContext","chartInstance","destroy","type","data","labels","datasets","backgroundColor","hoverOffset","options","responsive","plugins","legend","position","tooltip","callbacks","label","tooltipItem","raw","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/georgeulloa/Desktop/riot-app/my-react-app/src/components/WinRateChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Chart, ArcElement, Tooltip, Legend } from 'chart.js';\n\nChart.register(ArcElement, Tooltip, Legend);\n\nfunction WinRateChart({ wins, losses }) {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n    \n    // Destroy any existing chart instance to prevent errors\n    if (chartRef.current.chartInstance) {\n      chartRef.current.chartInstance.destroy();\n    }\n\n    // Create a new Chart instance\n    chartRef.current.chartInstance = new Chart(ctx, {\n      type: 'doughnut',\n      data: {\n        labels: ['Wins', 'Losses'],\n        datasets: [\n          {\n            data: [wins, losses],\n            backgroundColor: ['#4CAF50', '#F44336'], // Adjust colors as needed\n            hoverOffset: 4,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n          },\n          tooltip: {\n            callbacks: {\n              label: (tooltipItem) => {\n                return `${tooltipItem.label}: ${tooltipItem.raw}`;\n              },\n            },\n          },\n        },\n      },\n    });\n\n    // Cleanup function to destroy the chart on unmount\n    return () => {\n      if (chartRef.current.chartInstance) {\n        chartRef.current.chartInstance.destroy();\n      }\n    };\n  }, [wins, losses]);\n\n  return (\n    <div style={{ width: '200px', height: '200px' }}>\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n}\n\nexport default WinRateChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9DL,KAAK,CAACM,QAAQ,CAACL,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE3C,SAASI,YAAYA,CAAC;EAAEC,IAAI;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMc,GAAG,GAAGD,QAAQ,CAACE,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA,IAAIH,QAAQ,CAACE,OAAO,CAACE,aAAa,EAAE;MAClCJ,QAAQ,CAACE,OAAO,CAACE,aAAa,CAACC,OAAO,CAAC,CAAC;IAC1C;;IAEA;IACAL,QAAQ,CAACE,OAAO,CAACE,aAAa,GAAG,IAAIf,KAAK,CAACY,GAAG,EAAE;MAC9CK,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;QAC1BC,QAAQ,EAAE,CACR;UACEF,IAAI,EAAE,CAACV,IAAI,EAAEC,MAAM,CAAC;UACpBY,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;UAAE;UACzCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,QAAQ,EAAE;UACZ,CAAC;UACDC,OAAO,EAAE;YACPC,SAAS,EAAE;cACTC,KAAK,EAAGC,WAAW,IAAK;gBACtB,OAAO,GAAGA,WAAW,CAACD,KAAK,KAAKC,WAAW,CAACC,GAAG,EAAE;cACnD;YACF;UACF;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX,IAAIrB,QAAQ,CAACE,OAAO,CAACE,aAAa,EAAE;QAClCJ,QAAQ,CAACE,OAAO,CAACE,aAAa,CAACC,OAAO,CAAC,CAAC;MAC1C;IACF,CAAC;EACH,CAAC,EAAE,CAACR,IAAI,EAAEC,MAAM,CAAC,CAAC;EAElB,oBACEJ,OAAA;IAAK4B,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9C/B,OAAA;MAAQgC,GAAG,EAAE1B;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAAC/B,EAAA,CAtDQH,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAwDrB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}