{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:5000'; // Ensure this matches the Flask server's URL\n\nexport const getVersion = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/api/version`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching version:', error);\n  }\n};\nexport const getAccountData = async (gameName, tagLine) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/account/${gameName}/${tagLine}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching account data:', error.response ? error.response.data : error.message);\n    return {\n      error: 'Failed to fetch account data'\n    };\n  }\n};\nexport const getSummonerData = async puuid => {\n  try {\n    const response = await axios.get(`${API_URL}/api/summoner/by-puuid/${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching summoner data:', error);\n    return {\n      error: 'Failed to fetch summoner data'\n    };\n  }\n};\nexport const getMatchHistory = async puuid => {\n  try {\n    const response = await axios.get(`${API_URL}/api/matches/by-puuid/${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching match history:', error);\n    return [];\n  }\n};\nexport const getMatchData = async (matchId, puuid) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/matches/${matchId}?puuid=${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching match data:', error);\n    return {\n      error: 'Failed to fetch match data'\n    };\n  }\n};\n\n// Function to get match history with win rate\nexport const getMatchHistoryWithWinRate = async (puuid, limit = 10, offset = 0) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/matches/winrate/${puuid}`, {\n      params: {\n        limit,\n        offset\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching match history with win rate:', error);\n    return {\n      error: 'Failed to fetch match history'\n    };\n  }\n};\n\n// Function to fetch champion performance stats by puuid\nexport const getChampionPerformance = async puuid => {\n  try {\n    const response = await axios.get(`${API_URL}/api/champion-performance/${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching champion performance:', error);\n    return {\n      error: 'Failed to fetch champion performance data'\n    };\n  }\n};\n\n// New function to fetch champion mastery data by summonerId\nexport const getChampionMastery = async summonerId => {\n  try {\n    const response = await axios.get(`${API_URL}/api/champion-mastery/${summonerId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching champion mastery:', error);\n    return {\n      error: 'Failed to fetch champion mastery data'\n    };\n  }\n};","map":{"version":3,"names":["axios","API_URL","getVersion","response","get","data","error","console","getAccountData","gameName","tagLine","message","getSummonerData","puuid","getMatchHistory","getMatchData","matchId","getMatchHistoryWithWinRate","limit","offset","params","getChampionPerformance","getChampionMastery","summonerId"],"sources":["/Users/georgeulloa/Desktop/riot-app/my-react-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:5000'; // Ensure this matches the Flask server's URL\n\nexport const getVersion = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/api/version`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching version:', error);\n  }\n};\n\nexport const getAccountData = async (gameName, tagLine) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/account/${gameName}/${tagLine}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching account data:', error.response ? error.response.data : error.message);\n    return { error: 'Failed to fetch account data' };\n  }\n};\n\nexport const getSummonerData = async (puuid) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/summoner/by-puuid/${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching summoner data:', error);\n    return { error: 'Failed to fetch summoner data' };\n  }\n};\n\nexport const getMatchHistory = async (puuid) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/matches/by-puuid/${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching match history:', error);\n    return [];\n  }\n};\n\nexport const getMatchData = async (matchId, puuid) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/matches/${matchId}?puuid=${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching match data:', error);\n    return { error: 'Failed to fetch match data' };\n  }\n};\n\n// Function to get match history with win rate\nexport const getMatchHistoryWithWinRate = async (puuid, limit = 10, offset = 0) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/matches/winrate/${puuid}`, {\n      params: { limit, offset },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching match history with win rate:', error);\n    return { error: 'Failed to fetch match history' };\n  }\n};\n\n// Function to fetch champion performance stats by puuid\nexport const getChampionPerformance = async (puuid) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/champion-performance/${puuid}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching champion performance:', error);\n    return { error: 'Failed to fetch champion performance data' };\n  }\n};\n\n// New function to fetch champion mastery data by summonerId\nexport const getChampionMastery = async (summonerId) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/champion-mastery/${summonerId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching champion mastery:', error);\n    return { error: 'Failed to fetch champion mastery data' };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}